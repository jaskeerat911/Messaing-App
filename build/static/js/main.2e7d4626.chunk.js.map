{"version":3,"sources":["firebase.js","AuthProvider.js","Loader.jsx","features/appSlice.js","Login.js","SignUp.js","SidebarChannel.js","Sidebar.js","ChatHeader.js","Message.js","Messages.jsx","ChannelDescription.jsx","ChatBody.jsx","Chat.js","Feed.jsx","Popover.jsx","Profile.jsx","navigator.js","App.js","features/userSlice.js","app/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","database","storage","users","collection","channels","AuthContext","React","createContext","auth","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","email","password","a","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","useEffect","onAuthStateChanged","user","value","genericlogin","genericSignup","genericLogout","Provider","Loader","className","src","alt","appSlice","createSlice","name","initialState","channelId","channelName","reducers","setChannelInfo","state","action","payload","actions","selectChannelId","app","selectChannelName","Login","setEmail","setPassword","loginLoader","setLoginLoader","passwordShown","setPasswordShown","history","useNavigate","dispatch","useDispatch","useContext","loginFn","setTimeout","type","onChange","e","target","onClick","Button","id","to","SignUp","username","setUsername","region","setRegion","loader","setLoader","signupFn","userCredential","uid","doc","set","userId","SidebarChannel","channelData","setChannelData","onSnapshot","data","selectedChannel","document","querySelector","console","log","classList","remove","currentTarget","add","useStylesBootstrap","makeStyles","theme","arrow","color","tooltip","backgroundColor","fontSize","fontWeight","padding","margin","boxShadow","BootstrapTooltip","props","classes","Tooltip","Sidebar","logOutFn","title","placement","preventDefault","prompt","get","then","docs","map","channel","forEach","ele","updatedChannels","update","key","Avatar","substring","dropdown","window","getComputedStyle","display","style","ChatHeader","placeholder","Message","timestamp","message","userData","SetUserData","Date","toDate","toUTCString","Messages","useSelector","input","setInput","messages","setMessages","showEmojis","setShowEmojis","orderBy","snapshot","sendMessage","FieldValue","serverTimestamp","onSelect","emojiCode","unified","split","emoji","String","fromCodePoint","disabled","onKeyDown","length","ChannelDescription","usersInSelectedChannel","setUsersInSelectedChannel","allUsers","setAllUsers","allUsersId","push","Promise","all","allUsersData","userName","flag","updatedChannelUsers","alert","ChatBody","Chat","Feed","setUser","Popover","setPopover","newPassword","setNewPassword","handleChanges","credential","EmailAuthProvider","errorField","popover","reauthenticateWithCredential","updateEmail","catch","err","updatePassword","handleAvatar","selectedAvatar","previewContainer","avatarSrc","getAttribute","setAttribute","Profile","popoverTitle","setPopoverTitle","PrivateRoute","navigator","path","element","exact","replace","App","userSlice","login","logout","configureStore","reducer","userReducer","appReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.2e7d4626.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBdZoSJIHwhWJbhSlrEU7xtoy05Ucu5pMk\",\r\n    authDomain: \"chat-app-23ce6.firebaseapp.com\",\r\n    projectId: \"chat-app-23ce6\",\r\n    storageBucket: \"chat-app-23ce6.appspot.com\",\r\n    messagingSenderId: \"374689419180\",\r\n    appId: \"1:374689419180:web:026ba98633a33212207409\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nconst firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport const database = {\r\n    users: firestore.collection('users'),\r\n    channels : firestore.collection('channels')\r\n}\r\n\r\nexport default firebase;","import React, { useEffect, useState } from 'react';\r\nimport firebase from './firebase';\r\n\r\nexport const AuthContext = React.createContext();\r\nconst auth = firebase.auth();\r\n\r\nexport default function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    async function genericlogin(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    async function genericSignup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    async function genericLogout() {\r\n        auth.signOut();\r\n    }\r\n\r\n    useEffect(() => {\r\n        function action(user) {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        }\r\n        auth.onAuthStateChanged(action);\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        genericlogin,\r\n        genericSignup,\r\n        genericLogout,\r\n        currentUser\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Loader.css\"\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader-container\">\r\n            <img className='loader' src=\"/loader.gif\" alt=\".loading...\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        channelId: null,\r\n        channelName: null\r\n    },\r\n    reducers: {\r\n        setChannelInfo: (state, action) => {\r\n            state.channelId = action.payload.channelId\r\n            state.channelName = action.payload.channelName\r\n        }\r\n    },\r\n});\r\n\r\nexport const { setChannelInfo } = appSlice.actions; //set Current Channel\r\n\r\nexport const selectChannelId = (state) => state.app.channelId; // get current channel id\r\nexport const selectChannelName = (state) => state.app.channelName; // get current channel name\r\n\r\nexport default appSlice.reducer;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport Loader from \"./Loader\";\r\nimport { setChannelInfo } from './features/appSlice'\r\nimport { useDispatch } from 'react-redux'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\n\r\nconst Login = () => {\r\n    let [email, setEmail] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [loginLoader, setLoginLoader] = useState(false);\r\n    let [passwordShown, setPasswordShown] = useState(false);\r\n    let history = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    let { genericlogin, currentUser} = useContext(AuthContext);\r\n\r\n    const loginFn = async () => {\r\n        try {\r\n            setLoginLoader(true);\r\n            await genericlogin(email, password);\r\n            setLoginLoader(false);\r\n            dispatch(setChannelInfo({\r\n                channelId: null,\r\n                channelName: null\r\n            }));\r\n            history(\"/feed\");\r\n        } catch (err) {\r\n            setLoginLoader(false);\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            setTimeout(() => {}, 2000);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            history('/feed');\r\n        }\r\n        return;\r\n    })\r\n\r\n    return loginLoader ? (\r\n        <Loader></Loader>\r\n    ) : (\r\n        <div className=\"login__container\">\r\n            <div className=\"login active\">\r\n                <div className=\"login__header\">\r\n                    <h2>Welcome Back!</h2>\r\n                    <div>We're so excited to see you again</div>\r\n                </div>\r\n                <div className=\"input__container\">\r\n                    <div className=\"input__field\">\r\n                        <h5>EMAIL</h5>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={function (e) {\r\n                                setEmail(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input__field\">\r\n                        <h5>PASSWORD</h5>\r\n                        <input\r\n                            type={passwordShown ? \"text\" : \"password\"}\r\n                            value={password}\r\n                            onChange={function (e) {\r\n                                setPassword(e.target.value);\r\n                            }}\r\n                        />\r\n                        {passwordShown ? \r\n                            <VisibilityOffIcon className=\"password-visibility\" onClick={() => setPasswordShown(false)}/> : \r\n                            <VisibilityIcon className=\"password-visibility\" onClick={() => setPasswordShown(true)}/>\r\n                        }\r\n                    </div>\r\n                    \r\n                        \r\n                </div>\r\n                <div className=\"button__container\">\r\n                    <Button id=\"logIn\" onClick={loginFn}>\r\n                        LogIn\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    Need an account? <NavLink to=\"/signup\">Register</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport { storage, database } from \"./firebase\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport Loader from \"./Loader\";\r\nimport \"./SignUp.css\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\n\r\nfunction SignUp() {\r\n    let [email, setEmail] = useState(\"\");\r\n    let [password, setPassword] = useState(\"\");\r\n    let [username, setUsername] = useState(\"\");\r\n    let [region, setRegion] = useState(\"\");\r\n    let [loader, setLoader] = useState(false);\r\n    let [passwordShown, setPasswordShown] = useState(false);\r\n    let [file, setFile] = useState(null);\r\n    let history = useNavigate();\r\n\r\n    let { genericSignup } = useContext(AuthContext);\r\n\r\n    const signupFn = async () => {\r\n        try {\r\n            setLoader(true);\r\n            let userCredential = await genericSignup(email, password);\r\n            let uid = userCredential.user.uid;\r\n\r\n            database.users.doc(uid).set({\r\n                userId: uid,\r\n                email: email,\r\n                username: username,\r\n                region: region,\r\n            });\r\n\r\n            history(\"/feed\");\r\n        } catch (err) {\r\n            setLoader(false);\r\n            setEmail(\"\");\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            setRegion(\"\");\r\n        }\r\n    };\r\n\r\n    return loader ? (\r\n        <Loader></Loader>\r\n    ) : (\r\n        <div className=\"signup__container\">\r\n            <div className=\"signup\">\r\n                <div className=\"signup__header\">\r\n                    <h2>Create an Account</h2>\r\n                </div>\r\n                <div className=\"input__container\">\r\n                    <div className=\"input__field\">\r\n                        <h5>EMAIL</h5>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={function (e) {\r\n                                setEmail(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input__field\">\r\n                        <h5>FULL NAME</h5>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={function (e) {\r\n                                setUsername(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input__field\">\r\n                        <h5>PASSWORD</h5>\r\n                        <input\r\n                            type={passwordShown ? \"text\" : \"password\"}\r\n                            value={password}\r\n                            onChange={function (e) {\r\n                                setPassword(e.target.value);\r\n                            }}\r\n                        />\r\n                        {passwordShown ? (\r\n                            <VisibilityOffIcon\r\n                                className=\"password-visibility\"\r\n                                onClick={() => setPasswordShown(false)}\r\n                            />\r\n                        ) : (\r\n                            <VisibilityIcon\r\n                                className=\"password-visibility\"\r\n                                onClick={() => setPasswordShown(true)}\r\n                            />\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"input__field\">\r\n                        <h5>REGION</h5>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={region}\r\n                            onChange={function (e) {\r\n                                setRegion(e.target.value);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"button__container\">\r\n                        <Button id=\"logIn\" onClick={signupFn}>\r\n                            SignUp\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {/* <input\r\n                    id=\"default_avatar\"\r\n                    type=\"hidden\"\r\n                    name=\"myvalue\"\r\n                    src=\"/Avatars/default.png\"\r\n                    alt=\"\"\r\n                /> */}\r\n                {/* <input\r\n                    id=\"default_avatar\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={function (e) {\r\n                        let file = e.target.files[0];\r\n                        if (file != null) setFile(file);\r\n                    }}\r\n                /> */}\r\n                <div>\r\n                    <NavLink to=\"/login\">Already have an account?</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { database } from \"./firebase\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setChannelInfo } from \"./features/appSlice\";\r\nimport \"./SidebarChannel.css\";\r\n\r\nconst SidebarChannel = ({ id }) => {\r\n    const dispatch = useDispatch();\r\n    let [channelData, setChannelData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        database.channels.doc(id).onSnapshot((doc) => {\r\n            setChannelData(doc.data());\r\n        });\r\n    }, [id]);\r\n\r\n    const handlSidebarChannel = (e) => {\r\n        dispatch(\r\n            setChannelInfo({\r\n                channelId: id,\r\n                channelName: channelData.channelName,\r\n            })\r\n        );\r\n        \r\n        let selectedChannel = document.querySelector(\".sidebarChannel.selected\");\r\n        console.log(selectedChannel)\r\n        if (selectedChannel) {\r\n            selectedChannel.classList.remove(\"selected\");\r\n        }\r\n            e.currentTarget.classList.add(\"selected\");\r\n    };\r\n\r\n    return channelData ? (\r\n        <div className=\"sidebarChannel_container\">\r\n            <div className=\"sidebarChannel\" onClick={handlSidebarChannel}>\r\n                <div>\r\n                    <h1>#</h1>\r\n                    {channelData.channelName}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <></>\r\n    );\r\n};\r\n\r\nexport default SidebarChannel;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport {NavLink} from \"react-router-dom\"\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SidebarChannel from \"./SidebarChannel\";\r\nimport { Avatar, Tooltip, makeStyles} from \"@material-ui/core\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { database } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport Loader from \"./Loader\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n        color: \"#18191b\",\r\n    },\r\n    tooltip: {\r\n        backgroundColor: \"#18191b\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        margin: \"0\",\r\n        boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.6)\"\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n\r\n    return <Tooltip arrow classes={classes} {...props} />;\r\n}\r\n\r\nconst Sidebar = (props) => {\r\n    let { user } = props;\r\n\r\n    let { genericLogout } = useContext(AuthContext);\r\n\r\n    const logOutFn = async () => {\r\n        await genericLogout();\r\n    };\r\n    const handleAddChannel = (e) => {\r\n        e.preventDefault();\r\n\r\n        const channelName = prompt(\"Enter a new channel name\");\r\n\r\n        if (channelName) {\r\n            database.channels.add({\r\n                channelName: channelName,\r\n                users: [user.userId],\r\n            });\r\n        }\r\n\r\n        //need optimisation\r\n        database.channels.get().then((doc) => {\r\n            const documents = doc.docs.map((doc) => ({\r\n                id: doc.id,\r\n                channel: doc.data(),\r\n            }));\r\n\r\n            documents.forEach((ele) => {\r\n                if (channelName === ele.channel.channelName) {\r\n                    let updatedChannels = [];\r\n                    if (user.channels) {\r\n                        updatedChannels = [...user.channels, ele.id];\r\n                    } else {\r\n                        updatedChannels = [ele.id];\r\n                    }\r\n\r\n                    database.users.doc(user.userId).update({\r\n                        channels: updatedChannels,\r\n                    });\r\n\r\n                    // // setUser({ ...user, channels: updatedChannels });\r\n                    // user = { ...user, channels: updatedChannels };\r\n                    // let updateduser = [user]\r\n                    // database.channels.doc(ele.id).update({\r\n                    //     channelName : channelName,\r\n                    //     users : updateduser\r\n                    // })\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    const handleDropdown = (e) => {\r\n        let dropdown = document.querySelector(\".sidebar__profileIcons>.dropdown\");\r\n        let dropdownStyles = window.getComputedStyle(dropdown);\r\n\r\n        if (dropdownStyles.display === \"none\") {\r\n            dropdown.style.display = \"block\";\r\n        }\r\n        else {\r\n            dropdown.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    return user ? (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <h3>{user.username}</h3>\r\n                <ExpandMoreIcon />\r\n            </div>\r\n\r\n            <div className=\"sidebar__channels\">\r\n                <div className=\"sidebar__channelsHeader\">\r\n                    <div className=\"sidebar__header\">\r\n                        <ExpandMoreIcon />\r\n                        <h4>Text Channels</h4>\r\n                    </div>\r\n\r\n                    <BootstrapTooltip title=\"Add Channel\" placement=\"right\" arrow>\r\n                        <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\r\n                    </BootstrapTooltip>\r\n                </div>\r\n                <div className=\"sidebar__channelsList\">\r\n                    {user.channels ? (\r\n                        user.channels.map((id) => <SidebarChannel key={id} id={id} />)\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__profile\">\r\n                <Avatar alt={user.username} src=\"/broken-image.jpg\" />\r\n                <div className=\"sidebar__profileInfo\">\r\n                    <h3>{user.username}</h3>\r\n                    <p>#{user.userId.substring(0, 5)}</p>\r\n                </div>\r\n\r\n                <div className=\"sidebar__profileIcons\">\r\n                    <MicIcon />\r\n                    <HeadsetIcon />\r\n                    <SettingsIcon id=\"profile_settings\" onClick={handleDropdown}/>\r\n                    <div className=\"dropdown\">\r\n                        <NavLink to ={`/profile/${user.userId}`}  className=\"dropdown_content\">\r\n                            Profile\r\n                            <PersonIcon/>\r\n                        </NavLink>\r\n                        <div className=\"dropdown_content\" onClick={logOutFn}>\r\n                            Log Out\r\n                            <ExitToAppIcon/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <Loader />\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport './ChatHeader.css'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport EditLocationRounded from '@material-ui/icons/EditLocationRounded'\r\nimport PeopleAltRounded from '@material-ui/icons/PeopleAltRounded'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded'\r\nimport SendRoundedIcon from '@material-ui/icons/SendRounded'\r\nimport HelpRoundedIcon from '@material-ui/icons/HelpRounded'\r\n\r\nconst ChatHeader = ({ channelName }) => {\r\n    return (\r\n        <div className='chatHeader' >\r\n            <div className=\"chatHeader__left\">\r\n                {channelName ? <h3><span className=\"chatHeader__hash\">#</span>\r\n                        {channelName}\r\n                </h3> : <></>}\r\n            </div>\r\n\r\n            <div className=\"chatHeader__right\">\r\n                <NotificationsIcon className = \"control\" />\r\n                <EditLocationRounded className = \"control\" />\r\n                <PeopleAltRounded className = \"control\" />\r\n\r\n                <div className=\"chatHeader__search control\">\r\n                    <input type=\"text\" placeholder='Search' />\r\n                    <SearchRoundedIcon />\r\n                </div>\r\n\r\n                <SendRoundedIcon className = \"control\"/>\r\n                <HelpRoundedIcon className = \"control\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatHeader\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport \"./Message.css\";\r\nimport { database } from \"./firebase\";\r\n\r\nconst Message = ({ timestamp, userId, message }) => {\r\n    let [userData, SetUserData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        database.users.doc(userId).onSnapshot((doc) => {\r\n            SetUserData(doc.data());\r\n        });\r\n    })\r\n\r\n    return (\r\n        userData ?\r\n            <div className=\"message\">\r\n                <Avatar alt={userData.username} src=\"/broken-image.jpg\" />\r\n                <div className=\"message__info\">\r\n                    <h4>\r\n                        {userData.username}\r\n                        <span className=\"message__timestamp\">\r\n                            {new Date(timestamp?.toDate()).toUTCString()}\r\n                        </span>\r\n                    </h4>\r\n\r\n                    <p>{message}</p>\r\n                </div>\r\n            </div> : <></>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Message from \"./Message\";\r\nimport { selectChannelId, selectChannelName } from \"./features/appSlice\";\r\nimport EmojiEmoticonsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { database } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nfunction Messages(props) {\r\n    let { user } = props;\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    let [input, setInput] = useState(\"\");\r\n    let [messages, setMessages] = useState([]);\r\n    let [showEmojis, setShowEmojis] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            database.channels\r\n                .doc(channelId)\r\n                .collection(\"messages\")\r\n                .orderBy(\"timestamp\", \"asc\")\r\n                .onSnapshot((snapshot) => {\r\n                    setMessages(snapshot.docs.map((doc) => doc.data()));\r\n                });\r\n        }\r\n    }, [channelId]);\r\n\r\n    const sendMessage = (e) => {\r\n        // e.preventDefault();\r\n\r\n        database.channels.doc(channelId).collection(\"messages\").add({\r\n            message: input,\r\n            userId: user.userId,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    const addEmoji = (e) => {\r\n        let emojiCode = e.unified.split(\"-\");\r\n        let emoji = String.fromCodePoint(\"0x\" + emojiCode);\r\n        console.log(emoji);\r\n        setInput(input + emoji);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat__messages__body\">\r\n            <div className=\"chat__messages\">\r\n                {/* {messages.map((message) => {\r\n                            console.log(message);\r\n                        })} */}\r\n                {messages.map((message) => (\r\n                    <Message\r\n                        message={message.message}\r\n                        timestamp={message.timestamp}\r\n                        userId={message.userId}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {channelName ? (\r\n                <div className=\"chat__input\">\r\n                    <EmojiEmoticonsIcon\r\n                        className=\"chat-icons\"\r\n                        fontSize=\"medium\"\r\n                        onClick={() => setShowEmojis(!showEmojis)}\r\n                    />\r\n                    {showEmojis && (\r\n                        <div className=\"emoji-picker\">\r\n                            <Picker onSelect={addEmoji} theme=\"dark\" />\r\n                        </div>\r\n                    )}\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        disabled={!channelId}\r\n                        value={input}\r\n                        onClick={() => setShowEmojis(false)}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder={`Message #${channelName}`}\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === \"Enter\" && input.length > 0) sendMessage();\r\n                        }}\r\n                    />\r\n                    <SendIcon className=\"chat-icons\" id=\"send\" onClick={() => {if(input.length > 0) sendMessage()}} />\r\n                </div>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Avatar, Tooltip, makeStyles } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { database } from \"./firebase\";\r\nimport { selectChannelId, selectChannelName } from \"./features/appSlice\";\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n        color: \"#18191b\",\r\n    },\r\n    tooltip: {\r\n        backgroundColor: \"#18191b\",\r\n        fontSize: \"12px\",\r\n        fontWeight: \"600\",\r\n        padding: \"10px\",\r\n        margin: \"0\",\r\n        boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.6)\"\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n\r\n    return <Tooltip arrow classes={classes} {...props} />;\r\n}\r\n\r\nfunction ChannelDescription() {\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    let [usersInSelectedChannel, setUsersInSelectedChannel] = useState([]); // users in selected channel\r\n    let [allUsers, setAllUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (channelId) {\r\n            database.channels.doc(channelId).onSnapshot((snapshot) => {\r\n                let allUsersId = snapshot.data().users;\r\n                \r\n                let allUsers = [];\r\n                allUsersId.map((userId) => {\r\n                    let data = database.users.doc(userId).get();\r\n                    allUsers.push(data);\r\n                })\r\n                \r\n                Promise.all(allUsers).then(function (user) {\r\n                    let allUsersData = [];\r\n                    user.forEach(doc => {\r\n                        allUsersData.push(doc.data())\r\n                    });\r\n                    setUsersInSelectedChannel(allUsersData);\r\n                });\r\n\r\n                // for (let i = 0; i < allUsersId.length; i++){\r\n                //     database.users.doc(allUsersId[i]).onSnapshot((doc) => {\r\n                //         allUsersData.push(doc.data());\r\n                //         allUsersData.push(doc.data());\r\n                        \r\n                //         if (i === allUsersId.length - 1) {\r\n                //             console.log(allUsersData)\r\n                //         }\r\n                //     })\r\n                // }\r\n            });\r\n        }\r\n\r\n        database.users.get().then((doc) => {\r\n            let allUsersData = doc.docs.map((userData) => userData.data())\r\n\r\n            setAllUsers(allUsersData);\r\n        })\r\n\r\n    }, [channelId]);\r\n\r\n    const handleAddUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userName = prompt(\"Enter a new user name\");\r\n        \r\n        let flag = false;\r\n        allUsers.forEach((user) => {\r\n            if (userName === user.username) {\r\n                flag = true;\r\n\r\n                let allUsersId = usersInSelectedChannel.map(user => user.userId);\r\n                let updatedChannelUsers = [...allUsersId, user.userId];\r\n\r\n                // add new user to the selected channel database\r\n                database.channels.doc(channelId).update({ \r\n                    users : updatedChannelUsers\r\n                })\r\n\r\n                let updatedChannels = [];\r\n                if (user.channels) {\r\n                    updatedChannels = [...user.channels, channelId]\r\n                }\r\n                else {\r\n                    updatedChannels = [channelId]\r\n                }\r\n\r\n                // add the selected channel to the user database\r\n                database.users.doc(user.userId).update({\r\n                    channels : updatedChannels\r\n                })\r\n            }\r\n        })\r\n\r\n        if (!flag) {\r\n            alert(\"User does not exist\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"channel__description\">\r\n            {channelId ? (\r\n                <>\r\n                    <div className=\"channel__title\">\r\n                        <h3>#</h3>\r\n                        <h2>{channelName}</h2>\r\n                        <BootstrapTooltip title=\"Add User\" placement=\"top\" arrow>\r\n                            <AddIcon className=\"channel__addUser\" onClick={handleAddUser} />\r\n                        </BootstrapTooltip>\r\n                    </div>\r\n                    <div className=\"channel__users\">\r\n                        {usersInSelectedChannel ? (\r\n                            usersInSelectedChannel.map((user) =>\r\n                                <div className=\"user\">\r\n                                    {/* <Avatar src={'./DefaultAvatar.png'} /> */}\r\n                                    <Avatar alt={user.username} src=\"/broken-image.jpg\" />\r\n                                    <span>{user.username}</span>\r\n                                </div>\r\n                            )\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelDescription;\r\n","import React from 'react'\r\nimport Messages from './Messages'\r\nimport ChannelDescription from './ChannelDescription'\r\n\r\nfunction ChatBody(props) {\r\n    return (\r\n        <div className = 'chat__body'>\r\n            <Messages user ={props.user} channelId={props.channelId} channelName={props.channelName} />\r\n            <ChannelDescription channelId={props.channelId} channelName={props.channelName}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatBody\r\n","import React from \"react\";\r\nimport \"./Chat.css\";\r\nimport ChatHeader from \"./ChatHeader\";\r\nimport ChatBody from \"./ChatBody\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectChannelId, selectChannelName } from \"./features/appSlice\";\r\n\r\nconst Chat = (props) => {\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={channelName} />\r\n            <ChatBody user = {props.user} channelId={channelId} channelName={channelName}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport SideBar from \"./Sidebar\"\r\nimport Chat from './Chat';\r\nimport './feed.css'\r\nimport { database } from \"./firebase\";\r\nimport { AuthContext } from './AuthProvider';\r\nimport Loader from \"./Loader\"\r\n\r\nfunction Feed() {\r\n    let [user, setUser] = useState(null);\r\n    let { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        database.users.doc(currentUser.uid).onSnapshot((doc) => {\r\n            setUser(doc.data());\r\n        })\r\n    }, [currentUser])\r\n    return (\r\n        user ? \r\n            <div className= 'feed'>\r\n                <SideBar user ={user} />\r\n                <Chat user = {user} />\r\n            </div> :\r\n            <Loader/>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./Popover.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { database } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Popover({ title, user, setPopover }) {\r\n    let [username, setUsername] = useState(user.username);\r\n    let [email, setEmail] = useState(user.email);\r\n    let [password, setPassword] = useState(\"\");\r\n    let [newPassword, setNewPassword] = useState(\"\");\r\n    let { currentUser } = useContext(AuthContext);\r\n\r\n    const handleChanges = () => {\r\n        let credential = firebase.auth.EmailAuthProvider.credential(user.email, password);\r\n\r\n        let errorField = document.querySelector(\r\n            \".popover > .input_field_container > .input_field > .password_field\"\r\n        );\r\n\r\n        let popover = document.querySelector(\".popover_container\");\r\n\r\n        currentUser\r\n            .reauthenticateWithCredential(credential)\r\n            .then(function () {\r\n                console.log(\"user reauthenticated\");\r\n\r\n                errorField.classList.remove(\"error\");\r\n                errorField.children[0].style.display = \"none\";\r\n\r\n                if (title === \"username\") {\r\n                    database.users.doc(currentUser.uid).update({\r\n                        username: username,\r\n                    });\r\n                } else if (title === \"email\") {\r\n                    currentUser.updateEmail(email).then(function () {\r\n                        console.log(\"email updated\");\r\n\r\n                        database.users.doc(currentUser.uid).update({\r\n                            email: email,\r\n                        });\r\n                    })\r\n                    .catch(function (err) {\r\n                        console.log(\"An error occurred while changing the email\", err);\r\n                    })\r\n                } else if (title === \"password\") {\r\n                    currentUser.updatePassword(newPassword).then(function () {\r\n                        console.log(\"password changed\");\r\n                    })\r\n                        .catch(function (err) {\r\n                            console.log(\"An error occured while changing the password\", err);\r\n                    })\r\n                }\r\n\r\n                popover.style.display = 'none';\r\n            })\r\n            .catch(function () {\r\n                console.log(\"invalid username\");\r\n\r\n                errorField.classList.add(\"error\");\r\n                errorField.children[0].style.display = \"inline\";\r\n            });\r\n    };\r\n\r\n    const handleAvatar = (e) => {\r\n        let selectedAvatar = document.querySelector(\".popover_container > .popover > .avatar_container > .avatars > .avatar.selected\");\r\n        let previewContainer = document.querySelector(\".popover_container > .popover > .avatar_container > .avatar_preview_container > img\")\r\n        let avatarSrc = e.target.getAttribute(\"src\");\r\n\r\n        previewContainer.setAttribute(\"src\", avatarSrc);\r\n\r\n        if (selectedAvatar) {\r\n            selectedAvatar.classList.remove(\"selected\");\r\n        }\r\n\r\n        e.currentTarget.classList.add(\"selected\");\r\n\r\n    }\r\n\r\n    return user ? (\r\n        <div className=\"popover_container\">\r\n            {title === \"username\" && (\r\n                <div className=\"popover\">\r\n                    <div className=\"popover_heading\">\r\n                        <h2>Change your username</h2>\r\n                        <div>Enter a new username and your existing password.</div>\r\n                    </div>\r\n                    <div className=\"input_field_container\">\r\n                        <div className=\"input_field\">\r\n                            <h5>USERNAME</h5>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={username}\r\n                                onChange={function (e) {\r\n                                    setUsername(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input_field\">\r\n                            <h5 className=\"password_field\">\r\n                                CURRENT PASSWORD\r\n                                <span className=\"errorMessage\"> - Password does not match</span>\r\n                            </h5>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={function (e) {\r\n                                    setPassword(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button_container\">\r\n                        <button id=\"cancel\" onClick={() => setPopover(\"\")}>Cancel</button>\r\n                        <button id=\"done\" onClick={handleChanges}>\r\n                            Done\r\n                        </button>\r\n                    </div>\r\n                    <CloseIcon id=\"close\" onClick={() => setPopover(\"\")}/>\r\n                </div>\r\n            )}\r\n            {title === \"email\" && (\r\n                <div className=\"popover\">\r\n                    <div className=\"popover_heading\">\r\n                        <h2>Enter an email address</h2>\r\n                        <div>Enter a new email address and your existing password.</div>\r\n                    </div>\r\n                    <div className=\"input_field_container\">\r\n                        <div className=\"input_field\">\r\n                            <h5>EMAIL</h5>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={email}\r\n                                onChange={function (e) {\r\n                                    setEmail(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input_field\">\r\n                            <h5 className=\"password_field\">\r\n                                CURRENT PASSWORD\r\n                                <span className=\"errorMessage\"> - Password does not match</span>\r\n                            </h5>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={function (e) {\r\n                                    setPassword(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button_container\">\r\n                        <button id=\"cancel\" onClick={() => setPopover(\"\")}>Cancel</button>\r\n                        <button id=\"done\" onClick={handleChanges}>\r\n                            Done\r\n                        </button>\r\n                    </div>\r\n                    <CloseIcon id=\"close\" onClick={() => setPopover(\"\")}/>\r\n                </div>\r\n            )}\r\n            {title === \"password\" && (\r\n                <div className=\"popover\">\r\n                    <div className=\"popover_heading\">\r\n                        <h2>Change your password</h2>\r\n                        <div>Enter your current password and a new password.</div>\r\n                    </div>\r\n                    <div className=\"input_field_container\">\r\n                        <div className=\"input_field\">\r\n                            <h5 className=\"password_field\">\r\n                                CURRENT PASSWORD\r\n                                <span className=\"errorMessage\"> - Password does not match</span>\r\n                            </h5>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={password}\r\n                                onChange={function (e) {\r\n                                    setPassword(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input_field\">\r\n                            <h5>NEW PASSWORD</h5>\r\n                            <input\r\n                                type=\"password\"\r\n                                value={newPassword}\r\n                                onChange={function (e) {\r\n                                    setNewPassword(e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button_container\">\r\n                        <button id=\"cancel\" onClick={() => setPopover(\"\")}>Cancel</button>\r\n                        <button id=\"done\" onClick={handleChanges}>\r\n                            Done\r\n                        </button>\r\n                    </div>\r\n                    <CloseIcon id=\"close\" onClick={() => setPopover(\"\")}/>\r\n                </div>\r\n            )}\r\n            {title === \"avatar\" && (\r\n                <div className=\"popover\">\r\n                    <div className=\"popover_heading\">\r\n                        <h2>Change avatar</h2>\r\n                    </div>\r\n                    <div className=\"avatar_container\">\r\n                        <div className=\"avatars\">\r\n                            <div className=\"avatar selected\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/default.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_1.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_2.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_3.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_4.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_5.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_6.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_7.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_8.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_9.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_10.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"avatar\" onClick={handleAvatar}>\r\n                                <img src=\"/Avatars/Avatar_11.png\" alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"avatar_preview_container\">\r\n                            <img src=\"/Avatars/default.png\" alt=\"Avatar\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button_container\">\r\n                        <button id=\"cancel\" onClick={() => setPopover(\"\")}>Cancel</button>\r\n                        <button id=\"done\" onClick={handleChanges}>\r\n                            Done\r\n                        </button>\r\n                    </div>\r\n                    <CloseIcon id=\"close\" onClick={() => setPopover(\"\")}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    ) : (\r\n        <></>\r\n    );\r\n}\r\n\r\nexport default Popover;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./Profile.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { database } from \"./firebase\";\r\nimport { AuthContext } from \"./AuthProvider\";\r\nimport Loader from \"./Loader\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Popover from \"./Popover\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Profile() {\r\n    let [user, setUser] = useState(null);\r\n    let [popoverTitle, setPopoverTitle] = useState(\"\");\r\n    let { currentUser } = useContext(AuthContext);\r\n    let history = useNavigate();\r\n\r\n    useEffect(() => {\r\n        database.users.doc(currentUser.uid).onSnapshot((doc) => {\r\n            setUser(doc.data());\r\n        });\r\n    }, [currentUser]);\r\n\r\n    return user ? (\r\n        <div className=\"user_profile\">\r\n            <div className=\"profile_container\">\r\n                <h2>My Account</h2>\r\n                <div className=\"user_profile_card\">\r\n                    <div className=\"banner\"></div>\r\n                    <div className=\"user_info\">\r\n                        <Avatar\r\n                            id=\"user_display_image\"\r\n                            alt={user.username}\r\n                            src=\"/broken-image.jpg\"\r\n                        />\r\n                        <h2 id=\"username\">{user.username}</h2>\r\n                        <button onClick={() => setPopoverTitle(\"avatar\")}>Edit Avatar</button>\r\n                    </div>\r\n                    <div className=\"change_info_controls\">\r\n                        <div className=\"control_field\">\r\n                            <div>\r\n                                <h5>USERNAME</h5>\r\n                                <div>{user.username}</div>\r\n                            </div>\r\n                            <button onClick={() => setPopoverTitle(\"username\")}>Edit</button>\r\n                        </div>\r\n                        <div className=\"control_field\">\r\n                            <div>\r\n                                <h5>EMAIL</h5>\r\n                                <div>{user.email}</div>\r\n                            </div>\r\n                            <button onClick={() => setPopoverTitle(\"email\")}>Edit</button>\r\n                        </div>\r\n                        <div className=\"control_field\">\r\n                            <div>\r\n                                <h5>PASSWORD</h5>\r\n                                <div>*********</div>\r\n                            </div>\r\n                            <button onClick={() => setPopoverTitle(\"password\")}>Edit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"close_container\">\r\n                <CloseIcon id=\"close\" onClick={() => history(\"/feed\")}/>\r\n            </div>\r\n            {popoverTitle ? <Popover user={user} title={popoverTitle} setPopover={setPopoverTitle}/> : <></>}\r\n        </div>\r\n    ) : (\r\n        <Loader />\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useContext } from \"react\";\r\nimport { Routes, Route, Navigate, Outlet } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\nimport Feed from \"./Feed\";\r\nimport Profile from \"./Profile\"\r\nimport AuthProvider, { AuthContext } from \"./AuthProvider\";\r\n\r\nfunction navigator() {\r\n    return (\r\n        <>\r\n            <AuthProvider>\r\n                <Routes>\r\n                    <Route path=\"/login\" element={<Login />}></Route>\r\n                    <Route path=\"/signup\" element={<SignUp />}></Route>\r\n                    <Route exact path=\"/feed\" element={<PrivateRoute />}>\r\n                        <Route exact path=\"/feed\" element={<Feed />} />\r\n                    </Route>\r\n                    <Route exact path=\"/profile/:id\" element={<PrivateRoute />}>\r\n                        <Route exact path=\"/profile/:id\" element={<Profile />} />\r\n                    </Route>\r\n                    <Route path=\"/\" element={<Navigate replace to=\"/feed\" />}></Route>\r\n                </Routes>\r\n            </AuthProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction PrivateRoute() {\r\n    let { currentUser } = useContext(AuthContext);\r\n\r\n    return currentUser ? <Outlet /> : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default navigator;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Navigator from \"./navigator\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"container\">\r\n            <Navigator></Navigator>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user = null\r\n    }\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice'\r\nimport appReducer from '../features/appSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    app: appReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./app/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}